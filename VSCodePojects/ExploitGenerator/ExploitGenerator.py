import socket
import subprocess
import requests
from tkinter import *

def scan_ports():
    ip = ip_entry.get()
    start_port = int(start_port_entry.get())
    end_port = int(end_port_entry.get())

    open_ports = []
    for port in range(start_port, end_port + 1):
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(1)
        result = sock.connect_ex((ip, port))
        if result == 0:
            open_ports.append(port)
        sock.close()

    for port in open_ports:
        service = find_service(ip, port)
        print(f"Port {port} is open and running {service}")
        search_exploit(service)

def find_service(ip, port):
    command = f"nmap -p {port} {ip}".split()
    output = subprocess.check_output(command)
    output = output.decode("utf-8")
    service = output.split("service:")[1].split("product:")[0].strip()
    return service

def search_exploit(service):
    url = f"https://www.exploit-db.com/search?description={service}"
    response = requests.get(url)
    if response.status_code == 200:
        print(f"Exploits found for service '{service}':")
        print(response.text)
    else:
        print(f"No exploits found for service '{service}'")

# Create the GUI
root = Tk()
root.title("Port Scanner")

ip_label = Label(root, text="IP Address:")
ip_label.grid(row=0, column=0)

ip_entry = Entry(root)
ip_entry.grid(row=0, column=1)

start_port_label = Label(root, text="Start Port:")
start_port_label.grid(row=1, column=0)

start_port_entry = Entry(root)
start_port_entry.grid(row=1, column=1)

end_port_label = Label(root, text="End Port:")
end_port_label.grid(row=2, column=0)

end_port_entry = Entry(root)
end_port_entry.grid(row=2, column=1)

scan_button = Button(root, text="Scan Ports", command=scan_ports)
scan_button.grid(row=3, column=0, columnspan=2)

root.mainloop()
